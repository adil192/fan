name: Build for Android

on:
  # Enable manual run
  workflow_dispatch:
  push:
    tags:
      - '**'
    branches:
      - '**'
    paths:
      - .github/workflows/android.yml

jobs:
  build-apk:
    name: Build APK
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Checkout assets
        uses: actions/checkout@v4
        with:
          repository: adil192/fan-assets
          path: assets/images/fan-assets
          token: ${{ secrets.FAN_ASSETS_TOKEN}}

      - name: Print assets directory contents
        run: tree assets

      - name: Setup cache
        uses: actions/cache/restore@v4
        with:
          path: |
            .dart_tool/
            build/
            .flutter-plugins-dependencies
            pubspec.lock
          key: ${{ runner.OS }}-fan-${{ hashFiles('**/pubspec.lock') }}-${{ hashFiles('**/*.dart') }}
          restore-keys: |
            ${{ runner.OS }}-fan-

      - name: Remove development dependencies
        run: ./patches/remove_dev_dependencies.sh
      
      - name: Setup keystore
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | base64 -d > android/android.jks
          echo "storePassword=${{ secrets.KEY_STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=../android.jks" >> android/key.properties

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '21'

      - name: Disable Flutter CLI animations
        run: flutter config --no-cli-animations

      - run: flutter pub get

      - name: Build apk
        run: flutter build apk

      - name: Rename apk
        id: rename_apk
        run: |
          buildName=$(grep "version: " pubspec.yaml | sed 's/version: //g' | sed 's/+.*//g')
          apkName="JustFanNoise_v${buildName}.apk"
          echo "apkName=$apkName" >> $GITHUB_OUTPUT

          mkdir -p output
          mv build/app/outputs/flutter-apk/app-release.apk output/$apkName

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Saber-Android
          path: output/${{ steps.rename_apk.outputs.apkName }}

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: output/${{ steps.rename_apk.outputs.apkName }}
